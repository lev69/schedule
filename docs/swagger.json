{
    "swagger": "2.0",
    "info": {
        "description": "Schedule is simple calendare service",
        "title": "Schedule API",
        "contact": {},
        "license": {
            "name": "WTFPL"
        },
        "version": "0.9"
    },
    "host": "localhost:8000",
    "paths": {
        "/find_free_time": {
            "get": {
                "description": "get the closest free time for all required users and the specified period",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "find closest free time",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search period start time in RFC3339. If not specified, the app uses now.",
                        "name": "start_at",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Search period duration in format '1h2m3s'. Any of values may be ommited.",
                        "name": "duration",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meeting ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/meeting": {
            "get": {
                "description": "get meeting for given id or list with all meetings",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get meetings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Meeting ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meeting information",
                        "schema": {
                            "$ref": "#/definitions/lib.Meeting"
                        }
                    },
                    "400": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "add new meeting",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "add new meeting",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organizator ID",
                        "name": "creator_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Member ID list separated with a comma (',')",
                        "name": "member_ids",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Meeting start time in RFC3339",
                        "name": "start_at",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Meeting duration in format '1h2m3s'. Any of values may be ommited.",
                        "name": "duration",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "lib.Period"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "period",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meeting ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/response": {
            "put": {
                "description": "send presence responce",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "send presence response",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Meeting ID",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "lib.Presence"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "presence",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meeting ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "returns user information for given id or list with information about all users",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get user information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/lib.User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "add new user",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "add new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user_meetings": {
            "get": {
                "description": "get user meetings for specified period",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get user meetings for specified period",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search period start time in RFC3339",
                        "name": "start_at",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search period duration in format '1h2m3s'. Any of values may be ommited.",
                        "name": "duration",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meeting ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "empty",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "lib.Duration": {
            "type": "object",
            "properties": {
                "time.Duration": {
                    "type": "integer"
                }
            }
        },
        "lib.Meeting": {
            "type": "object",
            "properties": {
                "MeetingId": {
                    "type": "integer"
                },
                "creatorId": {
                    "type": "integer"
                },
                "duration": {
                    "$ref": "#/definitions/lib.Duration"
                },
                "firstOccurence": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lib.Participant"
                    }
                },
                "repeat": {
                    "type": "integer"
                }
            }
        },
        "lib.Participant": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "lib.User": {
            "type": "object",
            "properties": {
                "UserId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}